{"version":3,"sources":["Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAuDeA,MArDf,SAAkBC,GAChB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAACC,GACpBP,EAASO,EAAEC,OAAOV,QAWpB,OACE,sBAAMW,UAAU,YAAYC,SAVT,SAACH,GACpBA,EAAEI,iBACFhB,EAAMe,SAAS,CACbE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAERC,EAAS,KAIT,SACGL,EAAME,KACL,qCACE,uBACEoB,KAAK,OACLC,YAAY,mBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,kBACVW,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,mBAAlB,uBAGF,qCACE,uBACEQ,KAAK,OACLC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,cAAlB,4B,eCPKa,MAnCf,YAA2D,IAA5CC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,aAAaC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,WACzC,EAAwB9B,mBAAS,CAC7BgB,GAAI,KACJd,MAAM,KAFV,mBAAOD,EAAP,KAAa8B,EAAb,KAYA,OAAG9B,EAAKe,GACG,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SARZ,SAAAZ,GACjB4B,EAAW7B,EAAKe,GAAGd,GACnB6B,EAAQ,CACJf,GAAG,KACHd,MAAM,QAMPyB,EAAMK,KAAI,SAACC,EAAKC,GAAN,OACb,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAAoB,WAAtD,UACI,qBAAmBC,QAAW,kBAAMR,EAAaK,EAAKjB,KAAtD,SACOiB,EAAKb,MADFa,EAAKjB,IAGf,sBAAKH,UAAU,OAAf,UACI,cAAC,IAAD,CACEuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAC/BH,UAAU,gBAEZ,cAAC,IAAD,CACEuB,QAAS,kBAAML,EAAQ,CAACf,GAAGiB,EAAKjB,GAAId,MAAM+B,EAAKb,QAC/CP,UAAU,mBAXmDqB,OC0BhEG,MA7Cf,WACI,MAAyBrC,mBAAS,IAAlC,mBAAO2B,EAAP,KAAaW,EAAb,KA+BA,OACI,gCACI,4DACA,cAAC,EAAD,CAAUxB,SAjCF,SAAAmB,GACZ,GAAIA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAAnC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAYN,IAC1BW,EAASE,OA4BL,cAAC,EAAD,CACAb,MAAOA,EACPC,aAfa,SAAAZ,GACjB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAIzB,OAHIA,EAAKjB,KAAOA,IACZiB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IASLZ,WApBW,SAAAb,GACf,IAAM0B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAEA,EAAKjB,KAAOA,KACtDsB,EAASI,IAmBLZ,WA5BW,SAACc,EAAOC,GACnBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAG3CkB,GAAS,SAAAQ,GAAI,OAAEA,EAAKd,KAAI,SAAAe,GAAI,OAAGA,EAAK/B,KAAK4B,EAASC,EAASE,eCRpDC,MARf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,EAAD,OCFNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f43f6849.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Update Your Item\"\r\n            value={input}\r\n            name=\"text\"\r\n            className=\"todo-input edit\"\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"todo-button edit\">Update</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            name=\"text\"\r\n            className=\"todo-input\"\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"todo-button\">Add todo</button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React,{useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\n\r\n\r\nfunction Todo({todos,completeTodo,removeTodo,updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value:''\r\n    });\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id,value)\r\n        setEdit({\r\n            id:null,\r\n            value:''\r\n        });\r\n    };\r\n    if(edit.id){\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>;\r\n    }\r\n    return todos.map((todo,index)=>(\r\n        <div className={todo.isComplete ? 'todo-row complete':'todo-row'} key={index}>\r\n            <div key={todo.id} onClick = {() => completeTodo(todo.id)}> \r\n                  {todo.text}\r\n            </div>\r\n            <div className=\"icon\">\r\n                <RiCloseCircleLine\r\n                  onClick={() => removeTodo(todo.id)}\r\n                  className=\"delete-icon\"\r\n                />\r\n                <TiEdit\r\n                  onClick={() => setEdit({id:todo.id, value:todo.text})}\r\n                  className=\"edit-icon\"\r\n                />\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React,{useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n    const [todos,setTodos] = useState([])\r\n    const addTodo = todo =>{\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo,...todos];\r\n        setTodos(newTodos);\r\n        \r\n    };\r\n\r\n    const updateTodo = (todoId,newValue)=>{\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n            return;\r\n        }\r\n        setTodos(prev=>prev.map(item=>(item.id===todoId ? newValue:item )))\r\n    }\r\n\r\n    const removeTodo = id =>{\r\n        const removeArr = [...todos].filter(todo=>todo.id !== id);\r\n        setTodos(removeArr);\r\n    }\r\n    const completeTodo = id =>{\r\n        let updatedTodos = todos.map(todo=>{\r\n            if (todo.id === id){\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>What's the Plan for today?</h1>\r\n            <TodoForm onSubmit = {addTodo}/>\r\n            <Todo \r\n            todos={todos} \r\n            completeTodo={completeTodo} \r\n            removeTodo={removeTodo} \r\n            updateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","\nimport './App.css';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}